from random import randint
import pygame
from pygame.locals import *


# aqui estão todos os subprogramas necessários pro projeto
# desenhando as grades
def desenharGrade():
    for x in range(0, 400, 10):  # linhas verticais
        pygame.draw.line(tela, (20, 20, 20), (x, 0), (x, 400))
    for y in range(0, 400, 10):  # linhas verticais
        pygame.draw.line(tela, (20, 20, 20), (0, y), (400, y))
    return None


# colocando os pontos na tela
def printarPontos(pontos, fonte):
    fontePontos = fonte.render('Pontuação J1: %s' % str(pontos), True, (255, 255, 255))
    pontosRect = fontePontos.get_rect()
    tela.blit(fontePontos, pontosRect)
    mensagem = fonte.render('Pressione "espaço" para adicionar um novo jogador', True, (255, 255, 255))
    mensagemRect = mensagem.get_rect()
    mensagemRect.bottomleft = (10, 400 - 10)
    tela.blit(mensagem, mensagemRect)
    return None


# definindo direções da cobra
def movimentoCobra(cobra, dir):
    if dir == UP:
        cobra[0] = (cobra[0][0], cobra[0][1] - 10)
    if direcao == RIGHT:
        cobra[0] = (cobra[0][0] + 10, cobra[0][1])
    if direcao == DOWN:
        cobra[0] = (cobra[0][0], cobra[0][1] + 10)
    if direcao == LEFT:
        cobra[0] = (cobra[0][0] - 10, cobra[0][1])
    # checando se a cobra bateu nela mesma
    for i in range(1, len(cobra) - 1):
        if cobra[0][0] == cobra[i][0] and cobra[0][1] == cobra[i][1]:
            pygame.quit()
    for i in range(len(cobra) - 1, 0, -1):
        cobra[i] = (cobra[i - 1][0], cobra[i - 1][1])

    return None


# função para trocar direção da cobra evitando colisões com ela mesma.
def seBaterNaParede(cobra, dir):
    if cobraBateu(cobra):
        cobra.sort(reverse=True)
        novaDirecao = inverteDirecao(dir)
    return novaDirecao


# isso troca a direção da cobra
def inverteDirecao(dir):
    if dir == UP:
        return DOWN
    elif dir == RIGHT:
        return LEFT
    elif dir == DOWN:
        return UP
    elif dir == LEFT:
        return RIGHT


# estipulando o "campo" do jogo
def aleatorioGrade():
    x = randint(10, 390)
    y = randint(10, 390)
    return ((x // 10) * 10, (y // 10) * 10)


# testes de colisão
def colisao(c1, c2):
    return (c1[0] == c2[0]) and (c1[1] == c2[1])


# função pras paredes
def cobraBateu(cobra):
    if cobra[0][0] == 390 or cobra[0][1] == 390 or cobra[0][0] == 0 or cobra[0][1] == 0:
        return True


# checar se a cobra ta no mapa
def cobraForaDoMapa(cobra):
    if cobra[0][0] > 400 or cobra[0][1] > 400 or cobra[0][0] < 0 or cobra[0][1] < 0:
        return True


# farei os subprogramas da segunda cobra aqui, para não confundir com os códigos acima, ficaria bem desorganizado
def adicionarNovaCobra(cobra2, peleCobra2, direcao2):
    pontos2 = 0
    # o jogo vai gerar outra maçã pra outra cobra, justo né?
    maca2 = pygame.Surface((10, 10))
    maca2.fill((255, 203, 219))
    posicaoMaca2 = aleatorioGrade()
    while True:

        for event in pygame.event.get():
            # isso aqui é só pra atribuir as teclas do teclado no joguinho
            if event.type == KEYDOWN:
                if event.key == K_w:
                    direcao2 = UP
                if event.key == K_d:
                    direcao2 = RIGHT
                if event.key == K_s:
                    direcao2 = DOWN
                if event.key == K_a:
                    direcao2 = LEFT

        # isso aqui é pra adicionar mais um pedaço de cobra, apagar a maçã e contar os pontos
        if colisao(cobra2[0], posicaoMaca2):
            posicaoMaca2 = aleatorioGrade()
            cobra2.append((0, 0))
            pontos2 += 10

        # função de movimentação da cobrinha
        movimentoCobra(cobra2, direcao2)
        if cobraBateu(cobra2):
            direcao2 = seBaterNaParede(cobra2, direcao2)
        if cobraForaDoMapa(cobra2):  # as vezes o jogo tava bugando, aí eu coloquei só pra ele quitar caso bugasse mesmo
            pygame.quit()
            exit()

        for pos2 in cobra2:
            tela.blit(peleCobra2, pos2)
            pygame.display.update()


# fim dos subprogramas


# aqui começa o programa principal
pygame.init()
tela = pygame.display.set_mode((400, 400))
pygame.display.set_caption('Cobrinha do Python pra JG')

UP = 0
RIGHT = 1
DOWN = 2
LEFT = 3

# definindo o nosso querido protagonista e sua velocidade
cobra = [(200, 200), (210, 200), (220, 200)]
peleCobra = pygame.Surface((10, 10))
peleCobra.fill((255, 203, 219))
direcao = LEFT
relogio = pygame.time.Clock()

# definindo fonte do jogo e pontuação
fonte = pygame.font.Font('freesansbold.ttf', 12)
pontos = 0

# aqui que fica a maçã do jogo
maca = pygame.Surface((10, 10))
maca.fill((255, 203, 219))
posicaoMaca = aleatorioGrade()

# aqui que o jogo realmente começa
while True:
    relogio.tick(20)  # escolhi o fps como 20 ~ 24 pra reduzir as "piscadas" que o jogo dá

    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            exit()

        # isso aqui é só pra atribuir as teclas do teclado no joguinho
        if event.type == KEYDOWN:
            if event.key == K_UP:
                direcao = UP
            if event.key == K_RIGHT:
                direcao = RIGHT
            if event.key == K_DOWN:
                direcao = DOWN
            if event.key == K_LEFT:
                direcao = LEFT

            # caso o jogador 2 aperte "espaço", uma nova cobra aparecerá
            if event.key == K_SPACE:
                cobra1 = [(370, 390), (380, 390), (390, 390)]
                peleCobra2 = pygame.Surface((10, 10))
                peleCobra2.fill((0, 0, 220))
                direcao2 = LEFT
                adicionarNovaCobra(cobra1, peleCobra2, direcao2)

    # isso aqui é pra adicionar mais um pedaço de cobra, apagar a maçã e contar os pontos
    if colisao(cobra[0], posicaoMaca):
        posicaoMaca = aleatorioGrade()
        cobra.append((0, 0))
        pontos += 10

    # função de movimentação da cobrinha
    movimentoCobra(cobra, direcao)
    if cobraBateu(cobra):
        direcao = seBaterNaParede(cobra, direcao)
    if cobraForaDoMapa(cobra):  # as vezes o jogo tava bugando, aí eu coloquei só pra ele quitar caso bugasse mesmo
        pygame.quit()
        exit()

    # definições do ecrã
    tela.fill((0, 0, 0))
    tela.blit(maca, posicaoMaca)
    desenharGrade()
    printarPontos(pontos, fonte)

    for pos in cobra:
        tela.blit(peleCobra, pos)
        pygame.display.update()

# Desenvolvido por Mairon Azevedo caso haja cópia, por favor creditar
